// <auto-generated />
using System;
using HEnCasa.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HEnCasa.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20211014014806_Primera")]
    partial class Primera
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("HEnCasa.App.Dominio.Enfermera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Enfermeras");
                });

            modelBuilder.Entity("HEnCasa.App.Dominio.FamiliarDesignado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parentesco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FamiliaresDesignados");
                });

            modelBuilder.Entity("HEnCasa.App.Dominio.Historia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Diagnostico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SignoVitalId")
                        .HasColumnType("int");

                    b.Property<int?>("SugerenciaCuidadoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SignoVitalId");

                    b.HasIndex("SugerenciaCuidadoId");

                    b.ToTable("HistoriasClinicas");
                });

            modelBuilder.Entity("HEnCasa.App.Dominio.Medico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especialidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("HEnCasa.App.Dominio.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnfermeraId")
                        .HasColumnType("int");

                    b.Property<int>("FamiliarId")
                        .HasColumnType("int");

                    b.Property<string>("FechaNacimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HistoriaId")
                        .HasColumnType("int");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EnfermeraId")
                        .IsUnique();

                    b.HasIndex("FamiliarId")
                        .IsUnique();

                    b.HasIndex("HistoriaId")
                        .IsUnique();

                    b.HasIndex("MedicoId");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("HEnCasa.App.Dominio.SignoVital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Dolor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHora")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresionArterial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RitmoCardiaco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Saturacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temperatura")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SignosVitales");
                });

            modelBuilder.Entity("HEnCasa.App.Dominio.SugerenciaCuidado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHora")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SugerenciasCuidado");
                });

            modelBuilder.Entity("HEnCasa.App.Dominio.Historia", b =>
                {
                    b.HasOne("HEnCasa.App.Dominio.SignoVital", "SignoVital")
                        .WithMany()
                        .HasForeignKey("SignoVitalId");

                    b.HasOne("HEnCasa.App.Dominio.SugerenciaCuidado", "SugerenciaCuidado")
                        .WithMany()
                        .HasForeignKey("SugerenciaCuidadoId");

                    b.Navigation("SignoVital");

                    b.Navigation("SugerenciaCuidado");
                });

            modelBuilder.Entity("HEnCasa.App.Dominio.Paciente", b =>
                {
                    b.HasOne("HEnCasa.App.Dominio.Enfermera", "Enfermera")
                        .WithOne("Paciente")
                        .HasForeignKey("HEnCasa.App.Dominio.Paciente", "EnfermeraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HEnCasa.App.Dominio.FamiliarDesignado", "Familiar")
                        .WithOne("Paciente")
                        .HasForeignKey("HEnCasa.App.Dominio.Paciente", "FamiliarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HEnCasa.App.Dominio.Historia", "Historia")
                        .WithOne("Paciente")
                        .HasForeignKey("HEnCasa.App.Dominio.Paciente", "HistoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HEnCasa.App.Dominio.Medico", "Medico")
                        .WithMany("Pacientes")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enfermera");

                    b.Navigation("Familiar");

                    b.Navigation("Historia");

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("HEnCasa.App.Dominio.Enfermera", b =>
                {
                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("HEnCasa.App.Dominio.FamiliarDesignado", b =>
                {
                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("HEnCasa.App.Dominio.Historia", b =>
                {
                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("HEnCasa.App.Dominio.Medico", b =>
                {
                    b.Navigation("Pacientes");
                });
#pragma warning restore 612, 618
        }
    }
}
